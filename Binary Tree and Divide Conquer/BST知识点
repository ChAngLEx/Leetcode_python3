0.遍历顺序
preorder traversal 根左右
inorder traversal 左根右
postorder traversal 左右根

1. divide and conquer与recursion的区别
divide and conquer一定有返回值,而recursion一般用全局变量/类变量代替返回值

2. Iteration == None recursion

3. Backtracking == DFS

4. recursion和none recursion只是一种实现方式,而不是一种算法;traversal和divide and conquer都能用这两种方法实现

5. 一棵树的高度
O(logn) ~ O(n)

6. divide and conquer其实是一个postodrder,因为从下到上的实现

7. n个节点的binary tree一共有n个subtree(root,leaf都算)

8. 每次divide and conquer的时候只要先写了not root,后续都可以直接写recursion root.left/root.right
因为if not root,即保证了一定存在root.left/root.right

9. no extra space = O(1) space = no extra memory = constant space = inplace 都是不耗费额外空间的意思
额外空间:出了input和output的空间
new一个局部变量(不是list之类O(n)的变量)不耗费额外空间
